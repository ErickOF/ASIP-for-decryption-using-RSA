# Reading C:/intelFPGA/18.0/modelsim_ase/tcl/vsim/pref.tcl
# do asip_run_msim_rtl_verilog.do
# if {[file exists rtl_work]} {
# 	vdel -lib rtl_work -all
# }
# vlib rtl_work
# vmap work rtl_work
# Model Technology ModelSim - Intel FPGA Edition vmap 10.5b Lib Mapping Utility 2016.10 Oct  5 2016
# vmap work rtl_work 
# Copying C:/intelFPGA/18.0/modelsim_ase/win32aloem/../modelsim.ini to modelsim.ini
# Modifying modelsim.ini
# 
# vlog -sv -work work +incdir+C:/Users/erick/Documents/Git/ASIP-for-decryption-using-RSA/asip/asip/processor/path/if-stage {C:/Users/erick/Documents/Git/ASIP-for-decryption-using-RSA/asip/asip/processor/path/if-stage/instr_fetch_test.sv}
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 12:53:57 on Jul 09,2020
# vlog -reportprogress 300 -sv -work work "+incdir+C:/Users/erick/Documents/Git/ASIP-for-decryption-using-RSA/asip/asip/processor/path/if-stage" C:/Users/erick/Documents/Git/ASIP-for-decryption-using-RSA/asip/asip/processor/path/if-stage/instr_fetch_test.sv 
# -- Compiling module instr_fetch_test
# 
# Top level modules:
# 	instr_fetch_test
# End time: 12:53:57 on Jul 09,2020, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -sv -work work +incdir+C:/Users/erick/Documents/Git/ASIP-for-decryption-using-RSA/asip/asip/processor/path/if-stage {C:/Users/erick/Documents/Git/ASIP-for-decryption-using-RSA/asip/asip/processor/path/if-stage/pc_ff.sv}
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 12:53:57 on Jul 09,2020
# vlog -reportprogress 300 -sv -work work "+incdir+C:/Users/erick/Documents/Git/ASIP-for-decryption-using-RSA/asip/asip/processor/path/if-stage" C:/Users/erick/Documents/Git/ASIP-for-decryption-using-RSA/asip/asip/processor/path/if-stage/pc_ff.sv 
# -- Compiling module pc_ff
# 
# Top level modules:
# 	pc_ff
# End time: 12:53:57 on Jul 09,2020, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -sv -work work +incdir+C:/Users/erick/Documents/Git/ASIP-for-decryption-using-RSA/asip/asip/processor/path/if-stage {C:/Users/erick/Documents/Git/ASIP-for-decryption-using-RSA/asip/asip/processor/path/if-stage/adder.sv}
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 12:53:57 on Jul 09,2020
# vlog -reportprogress 300 -sv -work work "+incdir+C:/Users/erick/Documents/Git/ASIP-for-decryption-using-RSA/asip/asip/processor/path/if-stage" C:/Users/erick/Documents/Git/ASIP-for-decryption-using-RSA/asip/asip/processor/path/if-stage/adder.sv 
# -- Compiling module adder
# 
# Top level modules:
# 	adder
# End time: 12:53:57 on Jul 09,2020, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -sv -work work +incdir+C:/Users/erick/Documents/Git/ASIP-for-decryption-using-RSA/asip/asip/processor/path/if-stage {C:/Users/erick/Documents/Git/ASIP-for-decryption-using-RSA/asip/asip/processor/path/if-stage/pc_mux.sv}
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 12:53:57 on Jul 09,2020
# vlog -reportprogress 300 -sv -work work "+incdir+C:/Users/erick/Documents/Git/ASIP-for-decryption-using-RSA/asip/asip/processor/path/if-stage" C:/Users/erick/Documents/Git/ASIP-for-decryption-using-RSA/asip/asip/processor/path/if-stage/pc_mux.sv 
# -- Compiling module pc_mux
# 
# Top level modules:
# 	pc_mux
# End time: 12:53:57 on Jul 09,2020, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -sv -work work +incdir+C:/Users/erick/Documents/Git/ASIP-for-decryption-using-RSA/asip/asip/processor/path/if-stage {C:/Users/erick/Documents/Git/ASIP-for-decryption-using-RSA/asip/asip/processor/path/if-stage/if_stage.sv}
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 12:53:57 on Jul 09,2020
# vlog -reportprogress 300 -sv -work work "+incdir+C:/Users/erick/Documents/Git/ASIP-for-decryption-using-RSA/asip/asip/processor/path/if-stage" C:/Users/erick/Documents/Git/ASIP-for-decryption-using-RSA/asip/asip/processor/path/if-stage/if_stage.sv 
# -- Compiling module if_stage
# 
# Top level modules:
# 	if_stage
# End time: 12:53:57 on Jul 09,2020, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -sv -work work +incdir+C:/Users/erick/Documents/Git/ASIP-for-decryption-using-RSA/asip/asip/memories {C:/Users/erick/Documents/Git/ASIP-for-decryption-using-RSA/asip/asip/memories/instruction_mem.sv}
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 12:53:57 on Jul 09,2020
# vlog -reportprogress 300 -sv -work work "+incdir+C:/Users/erick/Documents/Git/ASIP-for-decryption-using-RSA/asip/asip/memories" C:/Users/erick/Documents/Git/ASIP-for-decryption-using-RSA/asip/asip/memories/instruction_mem.sv 
# -- Compiling module instruction_mem
# 
# Top level modules:
# 	instruction_mem
# End time: 12:53:57 on Jul 09,2020, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# 
vsim work.instr_fetch_test
# vsim work.instr_fetch_test 
# Start time: 12:54:07 on Jul 09,2020
# Loading sv_std.std
# Loading work.instr_fetch_test
# Loading work.if_stage
# Loading work.pc_ff
# Loading work.pc_mux
# Loading work.adder
# Loading work.instruction_mem
add wave -position end  sim:/instr_fetch_test/pc
add wave -position end  sim:/instr_fetch_test/jmp_pc
add wave -position end  sim:/instr_fetch_test/instr
add wave -position end  sim:/instr_fetch_test/clk
add wave -position end  sim:/instr_fetch_test/reset
add wave -position end  sim:/instr_fetch_test/pc_selector
# ** Warning: (vsim-WLF-5000) WLF file currently in use: vsim.wlf
#           File in use by: erick  Hostname: DESKTOP-4PN9CM5  ProcessID: 12636
#           Attempting to use alternate WLF file "./wlfte26cm9".
# ** Warning: (vsim-WLF-5001) Could not open WLF file: vsim.wlf
#           Using alternate file: ./wlfte26cm9
run 320
# clk=0, reset=0, jmp_pc=0000005c, pc_selector=0, pc=00000000, instr=e04f000f
# 
# clk=1, reset=0, jmp_pc=0000005c, pc_selector=0, pc=00000004, instr=e2802005
# 
# 
# clk=0, reset=0, jmp_pc=0000005c, pc_selector=0, pc=00000004, instr=e2802005
# 
# clk=1, reset=0, jmp_pc=0000005c, pc_selector=0, pc=00000008, instr=e280300c
# 
# 
# clk=0, reset=0, jmp_pc=0000005c, pc_selector=0, pc=00000008, instr=e280300c
# 
# clk=1, reset=0, jmp_pc=0000005c, pc_selector=0, pc=0000000c, instr=e2437009
# 
# 
# clk=0, reset=0, jmp_pc=0000005c, pc_selector=0, pc=0000000c, instr=e2437009
# 
# clk=1, reset=0, jmp_pc=0000005c, pc_selector=0, pc=00000010, instr=e1874002
# 
# 
# clk=0, reset=0, jmp_pc=0000005c, pc_selector=0, pc=00000010, instr=e1874002
# 
# clk=1, reset=0, jmp_pc=0000005c, pc_selector=0, pc=00000014, instr=e0035004
# 
# 
# clk=0, reset=0, jmp_pc=0000005c, pc_selector=1, pc=0000005c, instr=41000029
# 
# clk=1, reset=0, jmp_pc=0000005c, pc_selector=1, pc=0000005c, instr=41000029
# 
# 
# clk=0, reset=0, jmp_pc=0000005c, pc_selector=0, pc=00000060, instr=420800f9
# 
# clk=1, reset=0, jmp_pc=0000005c, pc_selector=0, pc=00000064, instr=43100020
# 
# 
# clk=0, reset=0, jmp_pc=0000005c, pc_selector=0, pc=00000064, instr=43100020
# 
# clk=1, reset=0, jmp_pc=0000005c, pc_selector=0, pc=00000068, instr=04208000
# 
# 
# clk=0, reset=0, jmp_pc=0000005c, pc_selector=0, pc=00000068, instr=04208000
# 
# clk=1, reset=0, jmp_pc=0000005c, pc_selector=0, pc=0000006c, instr=04200075
# 
# 
# clk=0, reset=0, jmp_pc=0000005c, pc_selector=1, pc=0000005c, instr=41000029
# 
# clk=1, reset=0, jmp_pc=0000005c, pc_selector=1, pc=0000005c, instr=41000029
# 
# 
# clk=0, reset=0, jmp_pc=0000005c, pc_selector=0, pc=00000060, instr=420800f9
# 
# clk=1, reset=0, jmp_pc=0000005c, pc_selector=0, pc=00000064, instr=43100020
# 
# 
# clk=0, reset=0, jmp_pc=0000005c, pc_selector=0, pc=00000064, instr=43100020
# 
# clk=1, reset=0, jmp_pc=0000005c, pc_selector=0, pc=00000068, instr=04208000
# 
# 
# clk=0, reset=0, jmp_pc=0000005c, pc_selector=0, pc=00000068, instr=04208000
# 
# clk=1, reset=0, jmp_pc=0000005c, pc_selector=0, pc=0000006c, instr=04200075
# 
# 
# End time: 12:54:25 on Jul 09,2020, Elapsed time: 0:00:18
# Errors: 0, Warnings: 2
